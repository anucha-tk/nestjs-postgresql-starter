services:
  server:
    container_name: nestjs-std
    build: .
    hostname: nestjs
    env_file: .env
    ports:
      - ${HTTP_PORT}:${HTTP_PORT}
    networks:
      - nestjs-network
    volumes:
      - ./:/app
      - .env/:/app
    restart: unless-stopped
    depends_on:
      - postgres
  postgres:
    container_name: postgres
    image: postgres:15
    user: root
    environment:
      - TZ=${DATABASE_TZ}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_USER_PWD}
      - POSTGRES_DB=${DATABASE_NAME}
    restart: always # run as a service
    env_file: .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nestjs-network
  postgres-test:
    container_name: postgres-test
    image: postgres:15
    user: root
    environment:
      - TZ=${DATABASE_TZ}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_USER_PWD}
      - POSTGRES_DB=${DATABASE_NAME}
    restart: always # run as a service
    env_file: .env.test
    ports:
      - "5433:5432"
    volumes:
      - postgres_data_test:/var/lib/postgresql/data
    networks:
      - nestjs-test-network
networks:
  nestjs-network:
    driver: bridge
  nestjs-test-network:
    driver: bridge
volumes:
  postgres_data:
  postgres_data_test:
